---
import { useTranslations } from '../i18n/utils';
import { projects } from '../data/projects';
import ProjectCard from './ProjectCard.astro';

export interface Props {
  lang: 'pt' | 'en';
}

const { lang } = Astro.props;
const t = useTranslations(lang);

// Get featured projects
const featuredProjects = projects.filter(p => p.featured);

// Get all unique tags for filter
const allTags = [...new Set(projects.flatMap(p => p.tags))];
---

<section id="projects" class="py-20 bg-gray-50 dark:bg-gray-800">
  <div class="container mx-auto px-4 sm:px-6 lg:px-8">
    <!-- Section Header -->
    <div class="text-center mb-16">
      <h2 class="text-3xl sm:text-4xl font-bold text-gray-900 dark:text-white mb-4">
        {t('projects.title')}
      </h2>
      <p class="text-lg text-gray-600 dark:text-gray-400 max-w-2xl mx-auto">
        {lang === 'pt' 
          ? 'Uma seleção dos meus projetos mais relevantes, desde análise de dados governamentais até arquitetura de sistemas.'
          : 'A selection of my most relevant projects, from government data analysis to system architecture.'
        }
      </p>
    </div>
    
    <!-- Filter Buttons -->
    <div class="flex flex-wrap justify-center gap-2 mb-12">
      <button 
        class="filter-btn active px-4 py-2 rounded-full text-sm font-medium transition-all duration-200 bg-blue-600 text-white"
        data-filter="all"
      >
        {t('projects.all')}
      </button>
      {allTags.map(tag => (
        <button 
          class="filter-btn px-4 py-2 rounded-full text-sm font-medium transition-all duration-200 bg-white dark:bg-gray-700 text-gray-700 dark:text-gray-300 hover:bg-blue-50 dark:hover:bg-gray-600 border border-gray-200 dark:border-gray-600"
          data-filter={tag.toLowerCase()}
        >
          {tag}
        </button>
      ))}
    </div>
    
    <!-- Projects Grid -->
    <div class="grid md:grid-cols-2 lg:grid-cols-3 gap-8" id="projects-grid">
      {projects.map(project => (
        <ProjectCard project={project} lang={lang} />
      ))}
    </div>
    
    <!-- GitHub Link -->
    <div class="text-center mt-16">
      <a
        href="https://github.com/anderson-ufrj"
        target="_blank"
        rel="noopener noreferrer"
        class="inline-flex items-center px-8 py-3 border border-gray-300 dark:border-gray-600 text-base font-medium rounded-lg text-gray-700 dark:text-gray-300 bg-white dark:bg-gray-800 hover:bg-gray-50 dark:hover:bg-gray-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 transition-all duration-200 shadow-lg hover:shadow-xl"
      >
        <svg class="mr-3 w-5 h-5" fill="currentColor" viewBox="0 0 24 24">
          <path d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z"/>
        </svg>
        {t('projects.viewAll')}
      </a>
    </div>
  </div>
</section>

<script>
  // Project filtering functionality
  document.addEventListener('DOMContentLoaded', () => {
    const filterButtons = document.querySelectorAll('.filter-btn');
    const projectCards = document.querySelectorAll('.project-card');
    
    filterButtons.forEach(button => {
      button.addEventListener('click', () => {
        const filter = button.getAttribute('data-filter');
        
        // Update active button
        filterButtons.forEach(btn => {
          btn.classList.remove('active', 'bg-blue-600', 'text-white');
          btn.classList.add('bg-white', 'dark:bg-gray-700', 'text-gray-700', 'dark:text-gray-300');
        });
        
        button.classList.add('active', 'bg-blue-600', 'text-white');
        button.classList.remove('bg-white', 'dark:bg-gray-700', 'text-gray-700', 'dark:text-gray-300');
        
        // Filter projects
        projectCards.forEach(card => {
          const projectTags = card.getAttribute('data-tags')?.toLowerCase() || '';
          
          if (filter === 'all' || projectTags.includes(filter)) {
            card.style.display = 'block';
            card.classList.add('animate-fade-in');
          } else {
            card.style.display = 'none';
            card.classList.remove('animate-fade-in');
          }
        });
      });
    });
  });
</script>

<style>
  .animate-fade-in {
    animation: fadeIn 0.3s ease-in-out;
  }
  
  @keyframes fadeIn {
    from {
      opacity: 0;
      transform: translateY(20px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }
</style>