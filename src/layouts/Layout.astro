---
import '../styles/global.css';
import { getLangFromUrl, useTranslations } from '../i18n/utils';
import site from '../data/site.json';

export interface Props {
  title?: string;
  description?: string;
  lang?: 'pt' | 'en';
}

const { title, description, lang = 'pt' } = Astro.props;
const t = useTranslations(lang);

const pageTitle = title ? `${title} - ${site.name}` : site.seo.title[lang];
const pageDescription = description || site.seo.description[lang];
const canonicalURL = new URL(Astro.url.pathname, Astro.site);
---

<!DOCTYPE html>
<html lang={lang} class="scroll-smooth">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="description" content={pageDescription} />
    <meta name="keywords" content={site.seo.keywords[lang]} />
    <meta name="author" content={site.name} />
    
    <!-- Canonical URL -->
    <link rel="canonical" href={canonicalURL} />
    
    <!-- Open Graph / Facebook -->
    <meta property="og:type" content="website" />
    <meta property="og:url" content={canonicalURL} />
    <meta property="og:title" content={pageTitle} />
    <meta property="og:description" content={pageDescription} />
    <meta property="og:image" content={new URL('/images/og-image.jpg', Astro.site)} />
    <meta property="og:locale" content={lang === 'pt' ? 'pt_BR' : 'en_US'} />
    
    <!-- Twitter -->
    <meta property="twitter:card" content="summary_large_image" />
    <meta property="twitter:url" content={canonicalURL} />
    <meta property="twitter:title" content={pageTitle} />
    <meta property="twitter:description" content={pageDescription} />
    <meta property="twitter:image" content={new URL('/images/og-image.jpg', Astro.site)} />
    <meta property="twitter:creator" content="@neural_thinker" />
    
    <!-- Favicon -->
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <link rel="icon" type="image/png" href="/favicon.png" />
    <link rel="apple-touch-icon" href="/apple-touch-icon.png" />
    
    <!-- Fonts -->
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    
    <!-- Theme Script (avoid FOUC) -->
    <script is:inline>
      const theme = (() => {
        if (typeof localStorage !== 'undefined' && localStorage.getItem('theme')) {
          return localStorage.getItem('theme');
        }
        if (window.matchMedia('(prefers-color-scheme: dark)').matches) {
          return 'dark';
        }
        return 'light';
      })();
      
      if (theme === 'light') {
        document.documentElement.classList.remove('dark');
      } else {
        document.documentElement.classList.add('dark');
      }
      
      window.localStorage.setItem('theme', theme);
    </script>
    
    <title>{pageTitle}</title>
  </head>
  <body class="bg-white dark:bg-gray-900 text-gray-900 dark:text-gray-100 font-sans">
    <slot />
    
    <!-- Smooth scroll script -->
    <script>
      // Smooth scroll for anchor links
      document.querySelectorAll('a[href^="#"]').forEach(anchor => {
        anchor.addEventListener('click', function (e) {
          e.preventDefault();
          const target = document.querySelector(this.getAttribute('href'));
          if (target) {
            target.scrollIntoView({
              behavior: 'smooth',
              block: 'start'
            });
          }
        });
      });
      
      // Theme toggle functionality
      function toggleTheme() {
        const currentTheme = localStorage.getItem('theme');
        const newTheme = currentTheme === 'dark' ? 'light' : 'dark';
        
        document.documentElement.classList.toggle('dark', newTheme === 'dark');
        localStorage.setItem('theme', newTheme);
      }
      
      // Make toggleTheme globally available
      window.toggleTheme = toggleTheme;
      
      // Console easter egg
      console.log(`
      üöÄ Neural Thinker - Built with Astro
      
      Hi there, developer! üë®‚Äçüíª
      
      Interessado no c√≥digo? Confira o reposit√≥rio:
      https://github.com/anderson-ufrj/neural_thinker
      
      üß† "Code is poetry, architecture is art"
      `);
    </script>
  </body>
</html>